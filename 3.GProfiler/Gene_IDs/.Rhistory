theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12),
plot.title = element_text(size = 12, face = "bold")) +
labs(x = "Number of Genes", y = "GO Biological Process", title = "GO Biological Process Enrichment 7vs12 dpf (Down)")
print(plot_7vs12_down_BP)
ggsave("7vs12_down_BP_enrichment.jpeg", plot_7vs12_down_BP, width = 12, height = 9, dpi = 300, bg = "white")
# ============================================================
# 4. 7vs12 dpf comparison (Up)
# ------------------------------------------------------------
data_7vs12_up <- read.csv("genes_7vs12_up_BP.csv", header = TRUE)
data_7vs12_up$neg_log10_adj_p <- -log10(data_7vs12_up$adjusted_p_value)
plot_7vs12_up_BP <- ggplot(data_7vs12_up, aes(x = intersection_size, y = reorder(term_name, -intersection_size),
size = intersection_size, color = neg_log10_adj_p)) +
geom_point() +
scale_size(name = "Number of Genes", range = c(2, 10)) +
scale_color_gradient(low = "red", high = "green", name = "-log10(FDR)") +
theme_minimal() +
theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12),
plot.title = element_text(size = 12, face = "bold")) +
labs(x = "Number of Genes", y = "GO Biological Process", title = "GO Biological Process Enrichment 7vs12 dpf (Up)")
print(plot_7vs12_up_BP)
ggsave("7vs12_up_BP_enrichment.jpeg", plot_7vs12_up_BP, width = 12, height = 9, dpi = 300, bg = "white")
# ============================================================
# G:Profiler GO Enrichment Plotting for Differential ATAC-seq Peaks (BP only)
# ============================================================
library(ggplot2)
# ============================================================
# 1. 3vs7 dpf comparison
# ------------------------------------------------------------
data_3vs7 <- read.csv("genes_3vs7_down_BP.csv", header = TRUE)
# ============================================================
# 2. 3vs12 dpf comparison
# ------------------------------------------------------------
data_3vs12 <- read.csv("genes_3vs12_down_BP.csv", header = TRUE)
# ============================================================
# 3. 7vs12 dpf comparison (Down)
# ------------------------------------------------------------
data_7vs12_down <- read.csv("genes_7vs12_down_BP.csv", header = TRUE)
# ============================================================
# 4. 7vs12 dpf comparison (Up)
# ------------------------------------------------------------
data_7vs12_up <- read.csv("genes_7vs12_up_BP.csv", header = TRUE)
# ============================================================
# G:Profiler GO Enrichment Plotting for Differential ATAC-seq Peaks
# ============================================================
library(ggplot2)
# ============================================================
# 1. 3vs7 dpf comparison
# ------------------------------------------------------------
data_3vs7 <- read.csv("genes_3vs7_down_BP.csv", header = TRUE)
# Select top 20 by adjusted p-value
data_3vs7 <- data_3vs7[order(data_3vs7$adjusted_p_value), ][1:20, ]
data_3vs7$neg_log10_adj_p <- -log10(data_3vs7$adjusted_p_value)
plot_3vs7_BP <- ggplot(data_3vs7, aes(x = intersection_size, y = reorder(term_name, -intersection_size),
size = intersection_size, color = neg_log10_adj_p)) +
geom_point() +
scale_size(name = "Number of Genes", range = c(2, 10)) +
scale_color_gradient(low = "red", high = "green", name = "-log10(FDR)") +
theme_minimal() +
theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12),
plot.title = element_text(size = 12, face = "bold")) +
labs(x = "Number of Genes", y = "GO Biological Process", title = "GO Biological Process Enrichment 3vs7 dpf (Down, Top 20)")
print(plot_3vs7_BP)
ggsave("3vs7_BP_enrichment.jpeg", plot_3vs7_BP, width = 12, height = 9, dpi = 300, bg = "white")
# ============================================================
# 2. 3vs12 dpf comparison
# ------------------------------------------------------------
data_3vs12 <- read.csv("genes_3vs12_down_BP.csv", header = TRUE)
data_3vs12 <- data_3vs12[order(data_3vs12$adjusted_p_value), ][1:20, ]
data_3vs12$neg_log10_adj_p <- -log10(data_3vs12$adjusted_p_value)
plot_3vs12_BP <- ggplot(data_3vs12, aes(x = intersection_size, y = reorder(term_name, -intersection_size),
size = intersection_size, color = neg_log10_adj_p)) +
geom_point() +
scale_size(name = "Number of Genes", range = c(2, 10)) +
scale_color_gradient(low = "red", high = "green", name = "-log10(FDR)") +
theme_minimal() +
theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12),
plot.title = element_text(size = 12, face = "bold")) +
labs(x = "Number of Genes", y = "GO Biological Process", title = "GO Biological Process Enrichment 3vs12 dpf (Down, Top 20)")
print(plot_3vs12_BP)
ggsave("3vs12_BP_enrichment.jpeg", plot_3vs12_BP, width = 12, height = 9, dpi = 300, bg = "white")
# ============================================================
# 3. 7vs12 dpf comparison (Down)
# ------------------------------------------------------------
data_7vs12_down <- read.csv("genes_7vs12_down_BP.csv", header = TRUE)
data_7vs12_down$neg_log10_adj_p <- -log10(data_7vs12_down$adjusted_p_value)
plot_7vs12_down_BP <- ggplot(data_7vs12_down, aes(x = intersection_size, y = reorder(term_name, -intersection_size),
size = intersection_size, color = neg_log10_adj_p)) +
geom_point() +
scale_size(name = "Number of Genes", range = c(2, 10)) +
scale_color_gradient(low = "red", high = "green", name = "-log10(FDR)") +
theme_minimal() +
theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12),
plot.title = element_text(size = 12, face = "bold")) +
labs(x = "Number of Genes", y = "GO Biological Process", title = "GO Biological Process Enrichment 7vs12 dpf (Down)")
print(plot_7vs12_down_BP)
ggsave("7vs12_down_BP_enrichment.jpeg", plot_7vs12_down_BP, width = 12, height = 9, dpi = 300, bg = "white")
# ============================================================
# 4. 7vs12 dpf comparison (Up)
# ------------------------------------------------------------
data_7vs12_up <- read.csv("genes_7vs12_up_BP.csv", header = TRUE)
data_7vs12_up$neg_log10_adj_p <- -log10(data_7vs12_up$adjusted_p_value)
plot_7vs12_up_BP <- ggplot(data_7vs12_up, aes(x = intersection_size, y = reorder(term_name, -intersection_size),
size = intersection_size, color = neg_log10_adj_p)) +
geom_point() +
scale_size(name = "Number of Genes", range = c(2, 10)) +
scale_color_gradient(low = "red", high = "green", name = "-log10(FDR)") +
theme_minimal() +
theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12),
plot.title = element_text(size = 12, face = "bold")) +
labs(x = "Number of Genes", y = "GO Biological Process", title = "GO Biological Process Enrichment 7vs12 dpf (Up)")
print(plot_7vs12_up_BP)
ggsave("7vs12_up_BP_enrichment.jpeg", plot_7vs12_up_BP, width = 12, height = 9, dpi = 300, bg = "white")
# ============================================================
# Updated Venn Diagram of GO:BP Terms from Differential ATAC-seq Peaks
# ============================================================
library(ggplot2)
library(dplyr)
library(ggVennDiagram)
library(tidyr)
# ------------------------------------------------------------
# 1. Read the new CSV files (already filtered for BP)
# ------------------------------------------------------------
bp_3vs7_down <- read.csv("genes_3vs7_down_BP.csv", header = TRUE)$term_name
bp_3vs12_down <- read.csv("genes_3vs12_down_BP.csv", header = TRUE)$term_name
bp_7vs12_down <- read.csv("genes_7vs12_down_BP.csv", header = TRUE)$term_name
bp_7vs12_up   <- read.csv("genes_7vs12_up_BP.csv",   header = TRUE)$term_name
# ------------------------------------------------------------
# 2. 4-way Venn Diagram
# ------------------------------------------------------------
venn_data_4way <- list(
`3vs7_down` = bp_3vs7_down,
`3vs12_down` = bp_3vs12_down,
`7vs12_down` = bp_7vs12_down,
`7vs12_up`   = bp_7vs12_up
)
plot_venn_4way <- ggVennDiagram(venn_data_4way, label_alpha = 0) +
scale_fill_gradient(low = "skyblue", high = "blue") +
ggtitle("Overlap of GO:BP Terms Across Differential Peak Comparisons") +
theme(plot.title = element_text(size = 14, face = "bold"))
show(plot_venn_4way)
ggsave("venn_4way_bp_diff_peaks.png", plot_venn_4way, width = 8, height = 8, dpi = 300, bg = "white")
View(data_3vs12)
View(data_3vs7)
View(data_7vs12_down)
View(data_7vs12_up)
# ============================================================
# Venn Diagram of GO:BP Terms from Differential ATAC-seq Peaks
# ============================================================
library(ggplot2)
library(dplyr)
library(ggVennDiagram)
library(tidyr)
library(readr)
# ------------------------------------------------------------
# 1. Read the new CSV files (already filtered for BP)
# ------------------------------------------------------------
bp_3vs7_down  <- read_csv("genes_3vs7_down_BP.csv")  %>% mutate(comparison = "3vs7_down")
bp_3vs12_down <- read_csv("genes_3vs12_down_BP.csv") %>% mutate(comparison = "3vs12_down")
bp_7vs12_down <- read_csv("genes_7vs12_down_BP.csv") %>% mutate(comparison = "7vs12_down")
bp_7vs12_up   <- read_csv("genes_7vs12_up_BP.csv")   %>% mutate(comparison = "7vs12_up")
# ------------------------------------------------------------
# 2. 4-way Venn Diagram
# ------------------------------------------------------------
venn_data_4way <- list(
`3vs7_down` = bp_3vs7_down,
`3vs12_down` = bp_3vs12_down,
`7vs12_down` = bp_7vs12_down,
`7vs12_up`   = bp_7vs12_up
)
plot_venn_4way <- ggVennDiagram(venn_data_4way, label_alpha = 0) +
scale_fill_gradient(low = "skyblue", high = "blue") +
ggtitle("Overlap of GO:BP Terms Across Differential Peak Comparisons") +
theme(plot.title = element_text(size = 14, face = "bold"))
# ============================================================
# Venn Diagram of GO:BP Terms from Differential ATAC-seq Peaks
# ============================================================
library(ggplot2)
library(dplyr)
library(ggVennDiagram)
library(tidyr)
library(readr)
# ------------------------------------------------------------
# 1. Read the new CSV files (already filtered for BP)
# ------------------------------------------------------------
bp_3vs7_down  <- read_csv("genes_3vs7_down_BP.csv")  %>% mutate(comparison = "3vs7_down")
bp_3vs12_down <- read_csv("genes_3vs12_down_BP.csv") %>% mutate(comparison = "3vs12_down")
bp_7vs12_down <- read_csv("genes_7vs12_down_BP.csv") %>% mutate(comparison = "7vs12_down")
bp_7vs12_up   <- read_csv("genes_7vs12_up_BP.csv")   %>% mutate(comparison = "7vs12_up")
# ------------------------------------------------------------
# 2. 4-way Venn Diagram
# ------------------------------------------------------------
venn_data_4way <- list(
`3vs7_down` = bp_3vs7_down,
`3vs12_down` = bp_3vs12_down,
`7vs12_down` = bp_7vs12_down,
`7vs12_up`   = bp_7vs12_up
)
plot_venn_4way <- ggVennDiagram(venn_data_4way, label_alpha = 0) +
scale_fill_gradient(low = "skyblue", high = "blue") +
ggtitle("Overlap of GO:BP Terms Across Differential Peak Comparisons") +
theme(plot.title = element_text(size = 14, face = "bold"))
# ============================================================
# Venn Diagram of GO:BP Terms from Differential ATAC-seq Peaks
# ============================================================
library(ggplot2)
library(dplyr)
library(ggVennDiagram)
library(tidyr)
library(readr)
# ------------------------------------------------------------
# 1. Read the new CSV files (already filtered for BP)
# ------------------------------------------------------------
bp_3vs7_down  <- read_csv("genes_3vs7_down_BP.csv")  %>% mutate(comparison = "3vs7_down")
bp_3vs12_down <- read_csv("genes_3vs12_down_BP.csv") %>% mutate(comparison = "3vs12_down")
bp_7vs12_down <- read_csv("genes_7vs12_down_BP.csv") %>% mutate(comparison = "7vs12_down")
bp_7vs12_up   <- read_csv("genes_7vs12_up_BP.csv")   %>% mutate(comparison = "7vs12_up")
# ------------------------------------------------------------
# 2. 4-way Venn Diagram
# ------------------------------------------------------------
venn_data_4way <- list(
`3vs7_down` = bp_3vs7_down,
`3vs12_down` = bp_3vs12_down,
`7vs12_down` = bp_7vs12_down,
`7vs12_up`   = bp_7vs12_up
)
plot_venn_4way <- ggVennDiagram(venn_data_4way, label_alpha = 0) +
scale_fill_gradient(low = "skyblue", high = "blue") +
ggtitle("Overlap of GO:BP Terms Across Differential Peak Comparisons") +
theme(plot.title = element_text(size = 14, face = "bold"))
show(plot_venn_4way)
ggsave("venn_4way_bp_diff_peaks.png", plot_venn_4way, width = 8, height = 8, dpi = 300, bg = "white")
# ------------------------------------------------------------
# 3. Combine all into one data frame
# ------------------------------------------------------------
bp_all <- bind_rows(bp_3vs7_down, bp_3vs12_down, bp_7vs12_down, bp_7vs12_up)
# ------------------------------------------------------------
# 4. Save combined file
# ------------------------------------------------------------
write_csv(bp_all, "combined_BP_significant_terms.csv")
View(bp_all)
View(bp_all)
View(bp_all)
View(bp_7vs12_down)
View(bp_7vs12_up)
unique_terms_stage <- read_csv("unique_terms_by_stage.tsv")
View(unique_terms_stage)
unique_terms_stage <- read_csv("unique_terms_by_stage.tsv", separate(TRUE))
unique_terms_stage <- read_tsv("unique_terms_by_stage.tsv")
View(unique_terms_stage)
unique_terms_stage <- read_tsv("all_terms_by_stage.tsv")
View(unique_terms_stage)
View(bp_7vs12_down)
View(bp_7vs12_up)
View(bp_all)
# ============================================================
# Simple Faceted Bar Plot for Selected GO Terms
# ============================================================
library(tidyverse)
# -------------------------------
# 1. Define GO terms to plot
# -------------------------------
selected_terms <- c(
"head development",
"eye morphogenesis",
"retina development in camera-type eye",
"retina morphogenesis in camera-type eye"
)
# -------------------------------
# 2. Read each file and count genes
# -------------------------------
read_and_count <- function(file, stage_name) {
df <- read_tsv(file, show_col_types = FALSE)
df <- df[df$term_name %in% selected_terms, ]
df <- data.frame(
term_name = df$term_name,
overlap_size = 1,   # each row = 1 gene
stage = stage_name
)
df <- aggregate(overlap_size ~ term_name + stage, df, sum)
return(df)
}
# Read all files
df_3vs7_down <- read_and_count("genes_3vs7_down_BP.tsv", "3vs7_down")
df_3vs12_down <- read_and_count("genes_3vs12_down_BP.tsv", "3vs12_down")
df_7vs12_down <- read_and_count("genes_7vs12_down_BP.tsv", "7vs12_down")
df_7vs12_up   <- read_and_count("genes_7vs12_up_BP.tsv",   "7vs12_up")
setwd("~/UoL_Bioinformatics/LIFE_703/Analysis/Differential_peak_analysis")
getwd()
library(tidyverse)
# -------------------------------
# 1. Define GO terms to plot
# -------------------------------
selected_terms <- c(
"head development",
"eye morphogenesis",
"retina development in camera-type eye",
"retina morphogenesis in camera-type eye"
)
# -----------------------------------------------------
# 2. Read each file and count genes for selected terms
# -----------------------------------------------------
# 3vs7_down
df_3vs7_down <- read_tsv("genes_3vs7_down_BP.tsv", show_col_types = FALSE)
# =====================================================
# Faceted Bar Plot of Selected GO Terms Across Stages
# =====================================================
# This script reads GO:BP gene lists from differential ATAC-seq peaks,
# counts the number of genes per selected GO term, and visualizes
# them in a faceted bar plot for stage-specific comparisons.
# =====================================================
library(tidyverse)
# -------------------------------
# 1. Define GO terms to plot
# -------------------------------
selected_terms <- c(
"head development",
"eye morphogenesis",
"retina development in camera-type eye",
"retina morphogenesis in camera-type eye"
)
# -----------------------------------------------------
# 2. Read each CSV file and count genes for selected terms
# -----------------------------------------------------
# 3vs7_down
df_3vs7_down <- read_csv("genes_3vs7_down_BP.csv", show_col_types = FALSE)
df_3vs7_down <- df_3vs7_down[df_3vs7_down$term_name %in% selected_terms, ]
df_3vs7_down <- data.frame(
term_name = df_3vs7_down$term_name,
overlap_size = 1,
stage = "3vs7_down"
)
df_3vs7_down <- aggregate(overlap_size ~ term_name + stage, df_3vs7_down, sum)
# 3vs12_down
df_3vs12_down <- read_csv("genes_3vs12_down_BP.csv", show_col_types = FALSE)
df_3vs12_down <- df_3vs12_down[df_3vs12_down$term_name %in% selected_terms, ]
df_3vs12_down <- data.frame(
term_name = df_3vs12_down$term_name,
overlap_size = 1,
stage = "3vs12_down"
)
df_3vs12_down <- aggregate(overlap_size ~ term_name + stage, df_3vs12_down, sum)
# 7vs12_down
df_7vs12_down <- read_csv("genes_7vs12_down_BP.csv", show_col_types = FALSE)
df_7vs12_down <- df_7vs12_down[df_7vs12_down$term_name %in% selected_terms, ]
df_7vs12_down <- data.frame(
term_name = df_7vs12_down$term_name,
overlap_size = 1,
stage = "7vs12_down"
)
library(tidyverse)
# 1. Define GO terms to plot
selected_terms <- c(
"head development",
"eye morphogenesis",
"retina development in camera-type eye",
"retina morphogenesis in camera-type eye"
)
# 2. Simple function to read and count genes
read_count <- function(file, stage_name) {
df <- read_csv(file, show_col_types = FALSE)
df <- df %>% filter(term_name %in% selected_terms)
if (nrow(df) == 0) {
# If no genes for this stage, create zero counts
df <- data.frame(term_name = selected_terms,
overlap_size = 0,
stage = stage_name)
} else {
df <- df %>%
group_by(term_name) %>%
summarise(overlap_size = n()) %>%
mutate(stage = stage_name)
}
return(df)
}
# 3. Apply to all files
df_3vs7_down  <- read_count("genes_3vs7_down_BP.csv", "3vs7_down")
df_3vs12_down <- read_count("genes_3vs12_down_BP.csv", "3vs12_down")
df_7vs12_down <- read_count("genes_7vs12_down_BP.csv", "7vs12_down")
df_7vs12_up   <- read_count("genes_7vs12_up_BP.csv", "7vs12_up")
# 4. Combine all into one table
go_data <- rbind(df_3vs7_down, df_3vs12_down, df_7vs12_down, df_7vs12_up)
library(ggplot2)
library(tidyverse)
# 6. Faceted bar plot
ggplot(go_data, aes(x = term_name, y = overlap_size, fill = stage)) +
geom_bar(stat = "identity", position = "dodge") +  # side-by-side bars
facet_wrap(~ stage, ncol = 2) +                   # one facet per stage
labs(
title = "Selected GO Terms Across Differential Peaks",
x = "GO Term",
y = "Number of Genes"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1)  # tilt x-axis labels
)
# 1. Define GO terms to plot
selected_terms <- c(
"head development",
"eye morphogenesis",
)
library(ggplot2)
library(tidyverse)
# 1. Define GO terms to plot
selected_terms <- c(
"head development",
"eye morphogenesis"
)
# 2. Simple function to read and count genes
read_count <- function(file, stage_name) {
df <- read_csv(file, show_col_types = FALSE)
df <- df %>% filter(term_name %in% selected_terms)
if (nrow(df) == 0) {
# If no genes for this stage, create zero counts
df <- data.frame(term_name = selected_terms,
overlap_size = 0,
stage = stage_name)
} else {
df <- df %>%
group_by(term_name) %>%
summarise(overlap_size = n()) %>%
mutate(stage = stage_name)
}
return(df)
}
# 3. Apply to all files
df_3vs7_down  <- read_count("genes_3vs7_down_BP.csv", "3vs7_down")
df_3vs12_down <- read_count("genes_3vs12_down_BP.csv", "3vs12_down")
df_7vs12_down <- read_count("genes_7vs12_down_BP.csv", "7vs12_down")
df_7vs12_up   <- read_count("genes_7vs12_up_BP.csv", "7vs12_up")
# 4. Combine all into one table
go_data <- rbind(df_3vs7_down, df_3vs12_down, df_7vs12_down, df_7vs12_up)
# 6. Faceted bar plot
ggplot(go_data, aes(x = term_name, y = overlap_size, fill = stage)) +
geom_bar(stat = "identity", position = "dodge") +  # side-by-side bars
facet_wrap(~ stage, ncol = 2) +                   # one facet per stage
labs(
title = "Selected GO Terms Across Differential Peaks",
x = "GO Term",
y = "Number of Genes"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1)  # tilt x-axis labels
)
View(go_data)
View(unique_terms_stage)
View(bp_all)
setwd("~/UoL_Bioinformatics/LIFE_703/Analysis/GProfiler/gene_names")
# Load required package
library(rtracklayer)
# -----------------------------
# Step 1: Import GTF and extract gene_id → gene_name mapping
gtf_file <- "Files/Astatotilapia_calliptera.fAstCal1.2.101.gtf"
gtf <- import(gtf_file)
# Load required package
library(rtracklayer)
# -----------------------------
# Step 1: Import GTF and extract gene_id → gene_name mapping
gtf_file <- "Astatotilapia_calliptera.fAstCal1.2.101.gtf"
gtf <- import(gtf_file)
gene_map <- unique(mcols(gtf)[, c("gene_id", "gene_name")])
gene_map <- as.data.frame(gene_map)
# -----------------------------
# Step 2: Function to map CSV IDs to gene names
# Handles both multi-line and single-line comma-separated files
map_ids_csv <- function(file, gene_map) {
# Read file
lines <- readLines(file)
# Split by comma and remove extra spaces
ids <- trimws(unlist(strsplit(lines, ",")))
# Map to gene names
mapped <- merge(data.frame(gene_id = ids),
gene_map,
by.x = "gene_id", by.y = "gene_id",
all.x = TRUE)
return(mapped)
}
# -----------------------------
# Step 3: Map the three files
aa_met_process                 <- map_ids_csv("aa_met_process.txt", gene_map)
actin_cyto_org                 <- map_ids_csv("actin_cyto_org.txt", gene_map)
carbohydrate_meta_pro          <- map_ids_csv("carbohydrate_meta_pro.txt", gene_map)
carbohydrate_deri_cat_pro      <- map_ids_csv("carbohydrate_deri_cat_pro.txt", gene_map)
cell_migration                 <- map_ids_csv("cell_migration.txt", gene_map)
cyto_org                       <- map_ids_csv("cyto_org.txt", gene_map)
digestive_tract_dev            <- map_ids_csv("Digestive_tract_dev.txt", gene_map)
growth_inv_in_morpho           <- map_ids_csv("growth_inv_in_morpho.txt", gene_map)
loco_behavior                  <- map_ids_csv("loco_behavior.txt", gene_map)
# -----------------------------
# Step 3: Map the three files
aa_met_process                 <- map_ids_csv("aa_met_process.txt", gene_map)
actin_cyto_org                 <- map_ids_csv("actin_cyto_org.txt", gene_map)
carbohydrate_meta_pro          <- map_ids_csv("carbohydrate_meta_pro.txt", gene_map)
carbohydrate_deri_cat_pro      <- map_ids_csv("carbohydrate_deri_cat_pro.txt", gene_map)
cell_migration                 <- map_ids_csv("cell_migration.txt", gene_map)
cyto_org                       <- map_ids_csv("cyto_org.txt", gene_map)
digestive_tract_dev            <- map_ids_csv("Digestive_tract_dev.txt", gene_map)
growth_inv_in_morpho           <- map_ids_csv("growth_inv_in_morpho.txt", gene_map)
loco_behavior                  <- map_ids_csv("loco_behavior.txt", gene_map)
View(aa_met_process)
# -----------------------------
# Step 4: Save mapped results
write.table(aa_met_process, "aa_met_process.tsv", sep="\t", row.names=FALSE, quote=FALSE)
write.table(actin_cyto_org, "actin_cyto_org.tsv", sep="\t", row.names=FALSE, quote=FALSE)
write.table(carbohydrate_meta_pro, "carbohydrate_meta_pro.tsv", sep="\t", row.names=FALSE, quote=FALSE)
write.table(carbohydrate_deri_cat_pro, "carbohydrate_deri_cat_pro.tsv", sep="\t", row.names=FALSE, quote=FALSE)
write.table(cell_migration, "cell_migration.tsv", sep="\t", row.names=FALSE, quote=FALSE)
write.table(cyto_org, "cyto_org.tsv", sep="\t", row.names=FALSE, quote=FALSE)
write.table(digestive_tract_dev, "digestive_tract_dev.tsv", sep="\t", row.names=FALSE, quote=FALSE)
write.table(growth_inv_in_morpho, "growth_inv_in_morpho.tsv", sep="\t", row.names=FALSE, quote=FALSE)
write.table(loco_behavior, "loco_behavior.tsv", sep="\t", row.names=FALSE, quote=FALSE)
